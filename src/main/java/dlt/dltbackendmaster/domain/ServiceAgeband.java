package dlt.dltbackendmaster.domain;
// Generated Jun 13, 2022, 9:37:47 AM by Hibernate Tools 5.2.12.Final

import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.ObjectNode;

/**
 * District generated by hbm2java
 */
@Entity
@Table(name = "services_agebands", catalog = "dreams_db")
@NamedQueries({ @NamedQuery(name = "ServiceAgeband.findAll", query = "SELECT d FROM ServiceAgeband d"), })
public class ServiceAgeband implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	private ServiceAgebandId id;
	private int serviceId;
	private int ageBand;
	private int level;
	private String description;

	private int status;
	private int createdBy;
	private Date dateCreated;
	private Integer updatedBy;
	private Date dateUpdated;

	public ServiceAgeband() {
	}

	public ServiceAgeband(int serviceId, int level, int ageBand, int status, int createdBy, Date dateCreated) {
		this.serviceId = serviceId;
		this.level = level;
		this.ageBand = ageBand;
		this.status = status;
		this.createdBy = createdBy;
		this.dateCreated = dateCreated;
	}

	public ServiceAgeband(int serviceId, int level, int ageBand, int status, int createdBy, Date dateCreated,
			Integer updatedBy, Date dateUpdated) {
		this.serviceId = serviceId;
		this.level = level;
		this.ageBand = ageBand;
		this.status = status;
		this.createdBy = createdBy;
		this.dateCreated = dateCreated;
		this.updatedBy = updatedBy;
		this.dateUpdated = dateUpdated;
	}

	@EmbeddedId

	@AttributeOverrides({ @AttributeOverride(name = "ageBand", column = @Column(name = "age_band", nullable = false)),
			@AttributeOverride(name = "serviceId", column = @Column(name = "service_id", nullable = false)), })
	public ServiceAgebandId getId() {
		return this.id;
	}

	public void setId(ServiceAgebandId id) {
		this.id = id;
	}

	@Column(name = "level", nullable = false, unique = true, length = 45)
	public int getLevel() {
		return this.level;
	}

	public void setLevel(int level) {
		this.level = level;
	}

	@Column(name = "status", nullable = false)
	public int getStatus() {
		return this.status;
	}

	public void setStatus(int status) {
		this.status = status;
	}

	@Column(name = "created_by", nullable = false)
	public int getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(int createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_created", nullable = false, length = 19)
	public Date getDateCreated() {
		return this.dateCreated;
	}

	public void setDateCreated(Date dateCreated) {
		this.dateCreated = dateCreated;
	}

	@Column(name = "updated_by")
	public Integer getUpdatedBy() {
		return this.updatedBy;
	}

	public void setUpdatedBy(Integer updatedBy) {
		this.updatedBy = updatedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_updated", length = 19)
	public Date getDateUpdated() {
		return this.dateUpdated;
	}

	public void setDateUpdated(Date dateUpdated) {
		this.dateUpdated = dateUpdated;
	}

	public ObjectNode toObjectNode() {
		ObjectMapper mapper = new ObjectMapper();

		ObjectNode district = mapper.createObjectNode();
		district.put("age_band", ageBand);
		district.put("level", level);
		district.put("service_id", serviceId);
		district.put("status", status);
		return district;
	}

	@Column(name = "service_id", nullable = false, insertable = false, updatable = false)
	public int getServiceId() {
		return serviceId;
	}

	public void setServiceId(int serviceId) {
		this.serviceId = serviceId;
	}

	@Column(name = "age_band", nullable = false, unique = true, length = 150, insertable = false, updatable = false)
	public int getAgeBand() {
		return ageBand;
	}

	public void setAgeBand(int ageBand) {
		this.ageBand = ageBand;
	}

	@Column(name = "description", nullable = false, unique = true, length = 150)
	public String getDescription() {
		return description;
	}

	public void setDescription(String description) {
		this.description = description;
	}
}
